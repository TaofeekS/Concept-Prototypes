[gd_resource type="CanvasItemShader" format=1]

[resource]

_code = {
"fragment": "// just pass the normal
uniform texture bg;
uniform texture normal;
float speed = 0.01;
//vec2 ywnormal=tex( normal,UV).wy * vec2(2.0,2.0) - vec2(1.0,1.0);
//NORMAL=vec3(ywnormal,sqrt(1 - (ywnormal.x * ywnormal.x) - (ywnormal.y * ywnormal.y) ));

vec2 r_uv = UV;// + vec2(mod(TIME*speed,1.0), 0.0);

//vec3 rbgnormal = tex( normal, UV ).rgb * vec3( 2.0, 2.0, 2.0 ) - vec3( 1.0, 1.0, 1.0 );
vec3 rbgnormal = tex( normal, r_uv ).rgb * vec3( 2.0, -2.0, 2.0 ) - vec3( 1.0, -1.0, 1.0 );
NORMAL = rbgnormal;
//COLOR = tex( bg, r_uv );


",
"fragment_ofs": 0,
"light": "
//vec3 light_3d = vec3( -LIGHT_VEC.x, LIGHT_VEC.y, -LIGHT_HEIGHT );
vec3 light_3d = vec3( 0, LIGHT_VEC.y, -LIGHT_HEIGHT ); // Light always vertical
vec3 n = NORMAL;
//compute diffuse light
float dp = max( dot( normalize( n ), -normalize( light_3d ) ), 0 );
LIGHT = vec4( vec3( dp ), 1.0 ) * COLOR * LIGHT_COLOR/1.5;

",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

